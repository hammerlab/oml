(*
   Copyright 2015:
     Leonid Rozenberg <leonidr@gmail.com>

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*)

open Util
open Test_utils

module Gen = FGen (struct
  let largest_float = 1e8
end)

let () =
  let matrix_size = 1000 in
  let float_matrix = Gen.(matrix (make_int 2 matrix_size) (make_int 2 matrix_size) float) in

  Test.add_random_test
    ~title:"PCA. there are size number of variances and they are decreasing ."
    Gen.(zip4 bool bool bool float_matrix)
    (fun (demean, scale, unbiased, m) ->
      let r,c = Matrices.dim m in
      let s = min r c in
      let t = pca ~demean ~scale ~unbiased (Mat.of_array m) in
      let v = variances t in
      let _ = components t in
      let _ = scalings t in
      Array.length v = s && Array.has_order ( > ) v)
    Spec.([ just_postcond_pred is_true ]);

  ()
