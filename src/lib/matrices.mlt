
open Test_utils

let () =
  let vs = 10 in  (* TODO: need to apply this as a map.*)
  let pair_of_arrays = Gen.(zip2 (array_float vs) (array_float vs)) in
  Test.add_random_test
    ~title:"Array addition is commutative."
    pair_of_arrays
    (fun (v1, v2) -> add v1 v2 = add v2 v1)
    Spec.([just_postcond_pred is_true]);
  Test.add_random_test
    ~title:"Dot products are commutative"
    ~nb_runs:5
    pair_of_arrays
    (fun (v1, v2) -> dot v1 v2 = dot v2 v1)
    Spec.([just_postcond_pred is_true]);
  Test.add_random_test
    ~title:"Dot products are distributive"
    ~nb_runs:5
    Gen.(zip2 (array_float vs) pair_of_arrays)
    (fun (v1, (v2, v3)) ->
      dot v1 (add v2 v3) = dot (add v1 v2) (add v1 v3))
    Spec.([just_postcond_pred is_true]);
